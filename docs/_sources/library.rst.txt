***********************************************************
ライブラリ・モジュール
***********************************************************

ライブラリ・モジュールとは
###########################################################

.. line-block::
    :class: mb0

    Python はインストールしたままでも様々な機能が使えますが、標準で用意されている物以外の様々な機能を追加する仕組みがあります。
    後から追加する機能の単位として **ライブラリ** や **モジュール** というものがあります。

    モジュールは基本的には .py ファイル単体で、ライブラリはいくつかのモジュールをまとめたものをいいます。

    例えば乱数を生成する機能は標準では使えません。
    そこで、乱数にまつわるプログラムをあらかじめ読込んでおくことで乱数を生成する機能が使えるようになります。

    乱数を生成できるモジュールに random というものがあります。
    これを読込むためには **import 文** を使用します。

.. code-block:: python

    import randomd # random モジュールを読込む
    print(random.randint(1,10)) # 1 から 10 までの間の整数をランダムに返す

.. line-block::
    :class: mb0

    上の例で行っていることは、random モジュールを読込んでランダムな整数値を返す関数 randint を呼び出しています。

    ライブラリやモジュール名には結構長いものもあって、関数を呼び出す度にいちいち長いライブラリ・モジュール名を打つのは大変なので別名をつけることができます。

.. code-block:: python

    import random as rnd # random モジュール を rnd という別名で読込む
    print(rnd.random()) # 0.0 以上 1.0 未満のランダムな値を返す

.. line-block::
    :class: mb0

    ライブラリには Python にあらかじめインストールされているもの (標準ライブラリ) と、そうでないもの (外部ライブラリ) があります。
    標準ライブラリには以下のようなものが含まれています。

+-------------+---------------------------------------------------------------------------------------------+
|random       |  乱数を生成するモジュール                                                                   |
+-------------+---------------------------------------------------------------------------------------------+
|math         |  算術計算用モジュール                                                                       |
+-------------+---------------------------------------------------------------------------------------------+
|datetime     |  日付時刻を扱うモジュール                                                                   |
+-------------+---------------------------------------------------------------------------------------------+
|re           |  正規表現を扱うモジュール                                                                   |
+-------------+---------------------------------------------------------------------------------------------+
|sys          |  コマンドライン引数などを扱うモジュール                                                     |
+-------------+---------------------------------------------------------------------------------------------+

.. line-block::
    :class: mb0

    今回作成したゲームでは外部ライブラリの pygame と numpy を使用しています。
    外部ライブラリには以下のようなものがあります。

+-------------+---------------------------------------------------------------------------------------------+
|numpy        |  標準ライブラリの random や math の上位互換ともいえる非常に高機能な算術計算用ライブラリ     |
+-------------+---------------------------------------------------------------------------------------------+
|pygame       |  ゲーム制作用ライブラリ                                                                     |
+-------------+---------------------------------------------------------------------------------------------+
|tensorflow   |  機械学習用ライブラリ                                                                       |
+-------------+---------------------------------------------------------------------------------------------+
|pandas       |  データ解析用ライブラリ                                                                     |
+-------------+---------------------------------------------------------------------------------------------+
|matplotlib   |  グラフ描画用ライブラリ                                                                     |
+-------------+---------------------------------------------------------------------------------------------+
|django       |  Web アプリ用フレームワーク                                                                 |
+-------------+---------------------------------------------------------------------------------------------+
|sphinx       |  ドキュメント作成ツール                                                                     |
+-------------+---------------------------------------------------------------------------------------------+

.. line-block::
    :class: mb0

    他にも様々なライブラリがあり、様々な用途に使えるということが Python の人気のゆえんともいえます。




pip
###########################################################

.. line-block::
    :class: mb0

    Python の外部ライブラリは PyPI というサイトで管理されていて、pip というツールでインストール等を行います。

    ライブラリをインストールするコマンド

.. code-block:: python

    pip install ライブラリ名 # macでは特に設定していない場合 pip3

.. line-block::
    :class: mb0

    ライブラリをアンインストールするコマンド

.. code-block::

    pip uninstall ライブラリ名

.. line-block::
    :class: mb0

    現在インストールされている外部ライブラリの一覧を表示するコマンド

.. code-block::

    pip freeze


仮想環境
###########################################################

.. line-block::

    外部ライブラリをインストールしていくとライブラリ同士の相性によってプログラムが正しく動かなくなるという問題があり、 **仮想環境** という仕組みでライブラリを管理する場所を切り分ける方法があります。
    仮想環境の構築には venv というものを使用します。

    また、pip と venv を組み合わせた pipenv というものを使うのがモダンだそうです。

仮想環境を作ってみよう
***********************************************************

.. line-block::
    :class: mb0

    venv を使用して仮想環境を作ってみましょう。
    venv を使用するには仮想環境のファイルを作成するディレクトリ上で次のコマンドを実行します。

.. code-block::

    python -m venv 仮想環境名

.. line-block::
    :class: mb0

    mac の場合は python3 に読み替えてください。
    また、仮想環境名は何でもいいのですが「venv」とするのが一般的のようです。

.. code-block::

    python -m venv venv

.. line-block::
    :class: mb0

    これで対象のディレクトリに仮想環境名のディレクトリ (今回の例だと「venv」) が作成されているはずです。

    次に、仮想環境を有効化させる必要があります。
    仮想環境を有効化させるには次のコマンドを実行します。

.. code-block:: none
    :caption: Windows

    venv\Scripts\activete

.. code-block:: none
    :caption: mac

    . venv/bin/activate

.. line-block::
    :class: mb0

    仮想環境を有効化させると、コマンドプロンプトやターミナルに仮想環境名が表示されるようになります。
    今回の例だと (venv) と表示されているはずです。

    仮想環境が有効な状態で pip (mac では pip3) を使用してライブラリをインストールすると、仮想環境に対してのみインストールされます。

    下記のコマンドを実行して numpy と pygame をインストールしてみましょう。
    複数のライブラリをインストールする場合は下記のように続けて指定すれば OK です。

.. code-block::

    pip install numpy pygame


.. line-block::
    :class: mb0

    numpy と pygame をインストールした状態でライブラリの一覧を表示してみましょう。

.. code-block::

    pip freeze

.. line-block::
    :class: mb0

    numpy と pygame がインストールされていることが表示されたでしょうか。

    仮想環境を終了するには次のコマンドを実行します。(mac も共通です)

.. code-block::

    deactivate

.. line-block::

    この状態でライブラリの一覧を表示すると numpy と pygame が (インストールしていなければ) インストールされていないことがわかるでしょうか。
